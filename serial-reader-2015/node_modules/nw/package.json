{
  "name": "nw",
  "version": "0.12.3",
  "description": "A installer for nw.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/nwjs/npm-installer.git"
  },
  "main": "index.js",
  "bin": {
    "nw": "bin/nw"
  },
  "scripts": {
    "postinstall": "node scripts/install.js",
    "test": "node test/index.js"
  },
  "files": [
    "lib",
    "bin",
    "scripts",
    "index.js"
  ],
  "author": {
    "name": "Kyle Robinson Young"
  },
  "license": "MIT",
  "dependencies": {
    "decompress": "^2.2.1",
    "download": "^3.3.0",
    "file-exists": "^0.1.1",
    "merge": "^1.2.0",
    "multimeter": "^0.1.1",
    "rimraf": "^2.2.8",
    "semver": "^4.3.0",
    "yargs": "^3.2.1",
    "chalk": "~1.0.0"
  },
  "devDependencies": {
    "request": "^2.53.0",
    "tape": "^3.5.0"
  },
  "keywords": [
    "nw",
    "nw.js",
    "nwjs",
    "chromium",
    "io.js",
    "node-webkit",
    "webkit",
    "installer",
    "desktop",
    "application"
  ],
  "readme": "# nw [![Build Status](http://img.shields.io/travis/nwjs/npm-installer.svg)](https://travis-ci.org/nwjs/npm-installer)\n\nAn installer for [nw.js](https://github.com/nwjs/nw.js).\n\n> nw.js is an app runtime based on Chromium and io.js. For building desktop applications that will run on OSX, Windows and Linux.\n\n[![NPM](https://nodei.co/npm/nw.png?downloads=true)](https://nodei.co/npm/nw/)\n\n## usage\nInstall locally to your project with: `npm install nw` and then in your `package.json` add a script:\n\n```json\n{\n  \"scripts\": {\n    \"start\": \"nw\"\n  }\n}\n```\n\nNow it will run your local project when you type `npm start`.\n\nIf your project is in another folder, add the path to the project `\"start\": \"nw path/to/app\"`.\n\nYou could also call the binary directly with `node_modules/.bin/nw` instead of adding to your `package.json`.\n\n### global\nYou can also install globally with `npm install nw -g` and then in any project type `nw` to run the project. Installing locally is recommended though as each project can have its own dependent version of nw.js.\n\n## example\nIf you want a really quick example try this:\n\n1. `git clone https://github.com/zcbenz/nw-sample-apps && cd nw-sample-apps`\n2. `npm init`\n3. `npm install nw`\n4. `\"node_modules/.bin/nw\" file-explorer`\n\nand now you should see a file explorer demo app.\n\n## command line options\nThere are a few (platform-specific) arguments you can pass to the `nw` executable to\ncustomize your nw.js application:\n\n* `--mac_plist <path-to-plist-file>`: (OS X only) Copies the given file to Info.plist in the app\n  bundle. This lets you do things like change your app's name and point to a different icon.\n\n* `--mac_icon <path-to-icns-file>`: (OS X only) Copies the given .icns file to the Resources/ dir\n  in the app bundle. You will need to point to the file with a custom plist file as well (see\n  `--mac_list`)\n\n**NOTE**: These options will keep the copied files in the app bundle for as long as the bundle is\non the filesystem (they're not deleted between app invocations). As a result, they're not\nrecommended if you installed nwjs globally using `-g`.  Also note that\n[OS X caches these files](http://proteo.me.uk/2011/08/mac-application-bundle-caching/),\nso you may need to manually clear these cached files during development.\n\n## install a specific version of nw.js\n\nTo install a specific version of nw.js use npm with the specific version: `npm install nw@0.12.0`\n\n> *Please note:* This npm package version tracks the version of nw.js that will be installed, with an additional build number that is used for revisions to the installer. As such `0.12.0-1` and `0.12.0-2` will both install `nw.js@0.12.0` but the latter has newer changes to the installer.\n\nYou may use `npm view nw versions` to view the list of available versions.\n\n## finding the path to the nw.js binary\n\nIf you would like to programmatically retrieve the path to the nw.js binary use:\n\n``` js\nvar findpath = require('nw').findpath;\nvar nwpath = findpath();\n// nwpath will equal the path to the binary depending on your environment\n```\n\n## retrieve binaries from custom download location or file path\n\nThe installer attempts to download binaries from the default location of `http://dl.nwjs.io/v`. You can override this by setting the npm config property `nwjs_urlbase` on the command line by passing the `--nwjs_urlbase` option:\n\n``` shell\nnpm install nwjs --nwjs_urlbase=http://my.own.location/somewhere\n```\n\nor adding it to your `.npmrc` file (https://www.npmjs.org/doc/files/npmrc.html):\n\n```\nnwjs_urlbase=http://my.own.location/somewhere\n```\n\nYou can alternatively set an environment variable `NWJS_URLBASE`:\n\n``` shell\nexport NWJS_URLBASE=http://my.own.location/somewhere\n```\n\nThe installer supports `file://` URLs to retrieve files from the local filesystem:\n\n``` shell\nexport NWJS_URLBASE=file:///home/bilbo/my/own/mirror\n```\n\n## using a proxy with or without authentication\n\nIf you are behind a proxy server you have to set an environment variable ```http_proxy``` with proxy servers url:\n\n```\nexport http_proxy=\"http://username:password@myproxy.com:8080\"\n```\n\nor\n\n```\nexport http_proxy=\"http://myproxy.com:8080\"\n```\n\n## license\n[nw.js](https://github.com/rogerwang/nw.js)'s code and this installer use the MIT license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nwjs/npm-installer/issues"
  },
  "_id": "nw@0.12.3",
  "_from": "nw@"
}
